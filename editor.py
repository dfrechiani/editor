import streamlit as st
import pandas as pd
import altair as alt
from datetime import datetime, timedelta

class ConteudoLinguagens:
    def __init__(self):
        self.temas = {
            "G√™neros Textuais": {"frequencia": 41, "facil": 21, "medio": 16, "dificil": 4},
            "Textos N√£o Liter√°rios": {"frequencia": 34, "facil": 18, "medio": 14, "dificil": 2},
            "No√ß√µes B√°sicas de Compreens√£o de Texto": {"frequencia": 32, "facil": 17, "medio": 12, "dificil": 3},
            "Textos Liter√°rios": {"frequencia": 32, "facil": 6, "medio": 8, "dificil": 18},
            "Varia√ß√µes Lingu√≠sticas": {"frequencia": 25, "facil": 12, "medio": 9, "dificil": 4},
            "Arte e Literatura": {"frequencia": 22, "facil": 2, "medio": 8, "dificil": 12},
            "Tecnologias da Comunica√ß√£o": {"frequencia": 18, "facil": 9, "medio": 7, "dificil": 2}
        }

def criar_cronograma_semanal():
    cronograma = {
        "Segunda": {
            "Tema Principal": "G√™neros Textuais",
            "Exerc√≠cios": "Quest√µes de n√≠vel f√°cil",
            "Revis√£o": "No√ß√µes B√°sicas de Compreens√£o"
        },
        "Ter√ßa": {
            "Tema Principal": "Textos N√£o Liter√°rios",
            "Exerc√≠cios": "Quest√µes de n√≠vel m√©dio",
            "Revis√£o": "G√™neros Textuais"
        },
        "Quarta": {
            "Tema Principal": "Textos Liter√°rios",
            "Exerc√≠cios": "Quest√µes de n√≠vel dif√≠cil",
            "Revis√£o": "Textos N√£o Liter√°rios"
        },
        "Quinta": {
            "Tema Principal": "Varia√ß√µes Lingu√≠sticas",
            "Exerc√≠cios": "Quest√µes mistas",
            "Revis√£o": "Textos Liter√°rios"
        },
        "Sexta": {
            "Tema Principal": "Arte e Literatura",
            "Exerc√≠cios": "Quest√µes de n√≠vel m√©dio/dif√≠cil",
            "Revis√£o": "Varia√ß√µes Lingu√≠sticas"
        },
        "S√°bado": {
            "Tema Principal": "Tecnologias da Comunica√ß√£o",
            "Exerc√≠cios": "Simulado",
            "Revis√£o": "Arte e Literatura"
        },
        "Domingo": {
            "Tema Principal": "Revis√£o Geral",
            "Exerc√≠cios": "Reda√ß√£o",
            "Revis√£o": "Temas da semana"
        }
    }
    return cronograma

def main():
    st.set_page_config(page_title="ENEM Linguagens - Plano de Estudos", layout="wide")
    st.title("üìö Plano de Estudos ENEM - Linguagens")
    
    conteudo = ConteudoLinguagens()
    
    # Criando DataFrame para visualiza√ß√£o
    df = pd.DataFrame(conteudo.temas).T
    df = df.sort_values('frequencia', ascending=False)
    
    col1, col2 = st.columns([2,1])
    
    with col1:
        st.subheader("An√°lise dos Temas")
        chart_data = df.reset_index()
        chart_data = chart_data.rename(columns={'index': 'Tema'})
        
        chart = alt.Chart(chart_data).mark_bar().encode(
            x='Tema',
            y='frequencia',
            color=alt.value('#1f77b4')
        ).properties(
            height=400
        )
        
        st.altair_chart(chart, use_container_width=True)
    
    with col2:
        st.subheader("Ranking de Prioridades")
        for tema, row in df.iterrows():
            st.write(f"‚Ä¢ {tema}: {int(row['frequencia'])} quest√µes")
    
    st.subheader("Cronograma Semanal")
    cronograma = criar_cronograma_semanal()
    dias_semana = list(cronograma.keys())
    selected_day = st.selectbox("Selecione o dia", dias_semana)
    
    if selected_day:
        st.write(f"### Plano de Estudos para {selected_day}")
        st.write("Tempo total dispon√≠vel: 1h30")
        
        col3, col4, col5 = st.columns(3)
        
        with col3:
            st.info(f"30min - Conte√∫do Novo\n{cronograma[selected_day]['Tema Principal']}")
        with col4:
            st.warning(f"30min - Exerc√≠cios\n{cronograma[selected_day]['Exerc√≠cios']}")
        with col5:
            st.success(f"30min - Revis√£o\n{cronograma[selected_day]['Revis√£o']}")
            
        st.write("---")
        st.write("#### Dicas para o dia:")
        if selected_day == "Domingo":
            st.write("‚Ä¢ Fa√ßa um resumo do que aprendeu durante a semana")
            st.write("‚Ä¢ Dedique tempo extra para reda√ß√£o")
            st.write("‚Ä¢ Revise os pontos que teve mais dificuldade")
        else:
            st.write("‚Ä¢ Fa√ßa anota√ß√µes durante o estudo")
            st.write("‚Ä¢ Resolva pelo menos 5 quest√µes do tema do dia")
            st.write("‚Ä¢ Use t√©cnicas de revis√£o ativa (explicar o conte√∫do, fazer mapas mentais)")

if __name__ == "__main__":
    main()
